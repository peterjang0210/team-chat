{"version":3,"sources":["components/pages/frontdor_logo.png","components/pages/Index.js","components/pages/Login.js","components/pages/Register.js","components/pages/CreateTeam.js","components/modals/CreateTeamModal.js","components/headers/TeamHeader.js","components/modals/CreateGroupModal.js","components/headers/GroupHeader.js","components/modals/InviteUserModal.js","components/headers/MemberHeader.js","components/headers/CustomerHeader.js","components/conversations/MessageBar.js","components/conversations/Message.js","components/conversations/MessageBoard.js","components/conversations/MessagePage.js","components/conversations/ConversationView.js","components/TeamListItem.js","components/pages/TeamPage.js","components/pages/Home.js","components/ProtectedRoute.js","App.js","serviceWorker.js","index.js","feathersClient.js"],"names":["module","exports","__webpack_require__","p","Index","react_default","a","createElement","Jumbotron","className","src","logo","alt","react_router_dom","to","Login","state","email","password","error","handleInput","e","_this$setState","_this","setState","Object","defineProperty","target","name","value","handleSubmit","preventDefault","fc","authenticate","strategy","catch","this","props","token","react_router","message","htmlFor","id","type","placeholder","required","onChange","onClick","React","Component","Register","loading","login","_callee","regenerator_default","wrap","_context","prev","next","service","create","then","res","stop","autoFocus","CreateTeam","modal","user","get","toggle","role","aria-label","Button","Modal","isOpen","ModalHeader","ModalBody","InputGroup","Input","teamName","teamNameInput","ModalFooter","teamCreate","CreateTeamModal","changeHandler","event","createTeam","response","console","log","modalState","color","TeamHeader","dropdownOpen","teams","logout","toggleModal","getTeams","prevProps","prevState","_this2","teamNames","find","query","_id","activeUser","_ref","asyncToGenerator","mark","_callee2","i","_context2","length","data","teamIds","_ref2","team","push","_x2","apply","arguments","_x","_this3","_ref3","_callee4","_context4","_ref4","_callee3","_context3","_x4","_x3","_this4","ButtonDropdown","DropdownToggle","caret","DropdownMenu","map","DropdownItem","key","teamChange","modals_CreateTeamModal","CreateGroupModal","modalStatus","groupNameHandler","addGroup","GroupHeader","style","fontSize","modals_CreateGroupModal","assign","InviteUserModal","userEmail","emailChange","addMember","MemberHeader","modals_InviteUserModal","CustomerHeader","MessageBar","Form","inline","FormGroup","clickHandler","Message","convoType","body","MessageBoard","scrollToBottom","messagesEnd","scrollIntoView","behavior","messages","conversations_Message","senderName","senderId","float","clear","ref","el","MessagePage","messageInput","conversationId","Fragment","conversations_MessageBoard","conversations_MessageBar","ConversationView","conversation","Nav","href","replace","trim","conversations_MessagePage","TeamListItem","status","activeUserId","activeConvoId","openConversation","preview","timestamps","TeamPage","teamMembers","groupConvos","memberConvos","customerConvos","messageView","activeConversation","groupName","groupModal","userModal","unreadToUnreplied","teamId","userId","statusPath","updatedConvo","activeTeamId","concat","patch","sent","getMemberConvos","getGroupConvos","getCustomerConvos","userIds","removeMyNameFromDisplayedMemberConvoName","abrupt","getTeamMembers","_callee5","_context5","getTeamName","_callee6","_context6","createNewPersonalConversation_OnJoinTeam","_callee7","_context7","createNewMember2MemberConversations_OnJoinTeam","_callee8","_context8","addNewMemberToAllGroupConversations_OnJoinTeam","_callee9","_context9","$push","initializeGroupConvoStatus_IfNeeded","_callee10","_context10","intializeMemberConvoStatus_IfNeeded","_callee11","_context11","initializeCustomerConvoStatus_IfNeeded","_callee12","_context12","getData","_callee13","_context13","updateStateForNewMessage","_callee14","convo","updatedMemberConvos","updatedGroupConvos","updatedCustomerConvos","_context14","updateMessagesForActiveConversation","updateStateForNewConvo","_callee15","_context15","_callee16","_context16","groupNameChange","_callee17","_context17","member","toggleGroupModal","invitedEmails","toggleEmail","_callee18","convoId","_context18","currentTarget","on","headers_TeamHeader","headers_GroupHeader","components_TeamListItem","headers_MemberHeader","headers_CustomerHeader","addSMS","conversations_ConversationView","getMessages","Home","pages_TeamPage","pages_CreateTeam","ProtectedRoute","component","rest","objectWithoutProperties","render","pathname","from","location","App","teamInput","payload","invitation","invitingTeamId","passport","verifyJWT","$pull","setUser","accessToken","path","exact","pages_Login","pages_Register","components_ProtectedRoute","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","feathers","require","socketio","io","auth","socket","feathersClient","configure","storage","localStorage"],"mappings":"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","file":"static/js/main.6363875b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/frontdor_logo.37956169.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Jumbotron } from \"reactstrap\";\nimport logo from \"./frontdor_logo.png\";\n\nfunction Index() {\n  return (\n    <Jumbotron className=\"landingPageDiv\">\n        <img src={ logo } alt=\"Logo Placeholder\" className=\"logoImage\"/>\n        <h2 className=\"landingPageHeader\">FrontDor</h2>\n        <Link to=\"/login\" className=\"authLink\">\n          Login\n        </Link>\n        <Link to=\"/register\" className=\"authLink\">\n          Register\n        </Link>\n    </Jumbotron>\n  );\n}\n\nexport default Index;\n","import React from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { fc } from '../../feathersClient';\n\nclass Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    error: null,\n  }\n\n  /**\n   * @param {e} the event\n   *\n   * This function handles user input and sets state accordingly\n   * if there is an error, it will be cleared when user starts\n   * typing again.\n   */\n  handleInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      error: null\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    fc.authenticate({\n      strategy: 'local',\n      email: this.state.email,\n      password: this.state.password,\n    })\n      .catch(error => {\n        this.setState({ error })\n      });\n  }\n\n  render() {\n    return (\n      this.props.token ? (\n        <Redirect to=\"/home\" />\n      ) : (\n          <div className=\"formContainer\">\n            <h1>Login</h1>\n            {this.state.error ? (<p>{this.state.error.message}</p>) : ''}\n            <form>\n              <div className=\"formRow\">\n                <label htmlFor=\"email\">Email</label>\n                <input className=\"formInput\" id=\"email\" name=\"email\" type=\"text\" placeholder=\"email\" required onChange={this.handleInput} />\n              </div>\n              <br></br>\n              <div className=\"formRow\">\n                <label htmlFor=\"password\">Password</label>\n                <input className=\"formInput\" id=\"password\" type=\"password\" name=\"password\" placeholder=\"password\" required onChange={this.handleInput} />\n              </div>\n              <br></br>\n              <div className=\"formRow\">\n                <button className=\"formBtn\" onClick={this.handleSubmit}>Login</button>\n              </div> \n            </form>\n            <Link to=\"/register\">new here? Register</Link>\n          </div>\n        )\n    )\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { fc } from \"../../feathersClient\";\n\nclass Register extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleInput = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  login = () => {\n    fc.authenticate({\n      strategy: \"local\",\n      email: this.state.email,\n      password: this.state.password\n    })\n    .catch(error => this.setState({ error }));\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    fc.service(\"users\")\n      .create({\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n      })\n      .then(res => {\n        this.login();\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n  render() {\n    return this.props.token ? (\n      <Redirect to=\"/home\" />\n    ) : (\n        <div className=\"formContainer\">\n          <h1>Register</h1>\n          <form>\n            <div className=\"formRow\">\n              <label htmlFor=\"name\">Full Name</label>\n              <input\n                className=\"formInput\"\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"name\"\n                autoFocus\n                required\n                onChange={this.handleInput}\n              />\n            </div>\n            <br></br>\n            <div className=\"formRow\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                className=\"formInput\"\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n                placeholder=\"email\"\n                required\n                onChange={this.handleInput}\n              />\n            </div>\n            <br></br>\n            <div className=\"formRow\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                className=\"formInput\"\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"password\"\n                required\n                onChange={this.handleInput}\n              />\n            </div>\n            <br></br>\n            <div className=\"formRow\">\n              <button className=\"formBtn\" onClick={this.handleSubmit}>Register</button>\n            </div>\n          </form>\n          <Link to=\"/login\">already member? Login</Link>\n        </div>\n      );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  InputGroup,\n  Input,\n  Button\n} from \"reactstrap\";\nimport { fc } from '../../feathersClient';\n\nclass CreateTeam extends Component {\n  state = {\n    modal: false,\n    user: fc.get('user')\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"vw-100 vh-100 flex-center flex-column\">\n        <div className=\"jumbotron w-50 text-center\">\n        <h1 className=\"display-4\">Welcome <span role=\"img\" aria-label=\"welcome\">&#x1f44b;</span></h1>\n        <h4 className=\"\">\n          Please feel free to create a team or wait until someone else adds you to their team!\n        </h4>\n        <hr />\n        <Button className=\"teamCreateBtn\" onClick={this.toggle}>\n          Create Team\n        </Button>\n        </div>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>\n            Please Enter a Team Name\n          </ModalHeader>\n          <ModalBody>\n            <InputGroup>\n              <Input\n                value={this.props.teamName}\n                onChange={this.props.teamNameInput}\n                name=\"teamInput\"\n                type=\"text\"\n                placeholder=\"Team name\"\n                className=\"firstCreateTeamInput\"\n              />\n            </InputGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button className=\"teamCreateBtn\" onClick={this.props.teamCreate}>\n              Create Team\n            </Button>\n            <Button className=\"cancelBtn\" onClick={this.toggle}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default CreateTeam;\n","import React from \"react\";\nimport { fc } from \"../../feathersClient\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  InputGroup\n} from \"reactstrap\";\n\nclass CreateTeamModal extends React.Component {\n  state = {\n    teamName: \"\"\n  };\n\n  changeHandler =(event) => {\n    this.setState({teamName: event.target.value});\n  }\n\n  createTeam = (e) => {\n    fc.service('teams').create({ // create the team given the input name\n        name: this.state.teamName,\n    })\n    .then((response) => {\n      console.log('CreateTeamModal ran create team',response);\n        this.setState({teamName: \"\"});\n        this.props.toggle();\n    })\n}\n\n  render() {\n    return (\n      <div>\n        <Modal\n          isOpen={this.props.modalState}\n          toggle={this.props.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.props.toggle}>Create a New Team</ModalHeader>\n          <ModalBody>\n            <InputGroup>\n              <Input placeholder=\"Enter New Team Name\" value={this.state.teamName} onChange={this.changeHandler}/>\n            </InputGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.createTeam}>\n                Create Team\n            </Button>\n            <Button color=\"cancelBtn\" onClick={this.props.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default CreateTeamModal;\n","import React from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\nimport CreateTeamModal from \"../modals/CreateTeamModal\";\nimport { fc } from \"../../feathersClient\";\n\n/**\n * This is the header for the sidebar that allows the user to switch teams\n */\nclass TeamHeader extends React.Component {\n  state = {\n    dropdownOpen: false,\n    modal: false,\n    teams: []\n  };\n\n  componentDidMount(){\n    this.getTeams();\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    const teamNames = [];\n    fc.service(\"users\").find({query: {_id: this.props.activeUser._id}})\n      .then(async user => {\n        if(this.state.teams && this.state.teams.length !== user.data[0].teamIds.length){\n          for(let i = 0; i < user.data[0].teamIds.length; i++){\n            await fc.service(\"teams\").find({query: {_id: user.data[0].teamIds[i]}})\n              .then(async (team) => {\n                await teamNames.push(team.data[0]);\n              })\n          }\n          this.setState({teams: teamNames});\n        }\n      });\n  }\n\n  async getTeams(){ // CONSIDER REFACTOR TO ARROW FUNCTION \n    const teamNames = [];\n    for(let i = 0; i < this.props.activeUser.teamIds.length; i++){\n      await fc.service(\"users\").find({query: {_id: this.props.activeUser._id}})\n        .then(async (user) => {\n          await fc.service(\"teams\").find({query: {_id: user.data[0].teamIds[i]}})\n            .then(async (team) => {\n              await teamNames.push(team.data[0]);\n            });\n        });\n    }\n    console.log(teamNames);\n    this.setState({teams: teamNames});\n  }\n  \n  logout = () => {\n    fc.logout();\n  }\n\n  toggle = () => {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  toggleModal = () => {\n    this.setState({modal: !this.state.modal});\n  }\n\n  render() {\n    const { dropdownOpen } = this.state;\n    const { teamName } = this.props;\n\n    return (\n      <div className=\"teamDropDown sticky-top\">\n        <div className=\"d-flex justify-content-center mb-4 dropDown\">\n          <ButtonDropdown className=\"switchTeamBtn\" isOpen={dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle caret>{ teamName }</DropdownToggle>\n            <DropdownMenu>\n              {this.state.teams && this.state.teams.map((team, i) => <DropdownItem key={i} onClick={this.props.teamChange} value={team._id}>{team.name}</DropdownItem>)}\n              <DropdownItem onClick={this.toggleModal}>Create Team</DropdownItem>\n              <DropdownItem onClick={this.logout}>Logout</DropdownItem>\n            </DropdownMenu>\n          </ButtonDropdown>\n          <CreateTeamModal activeUser={this.props.activeUser} modalState={this.state.modal} toggle={this.toggleModal}/>\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default TeamHeader;\n","import React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  InputGroup\n} from \"reactstrap\";\n\nconst CreateGroupModal = props => (\n  <div>\n    <Modal\n      isOpen={props.modalStatus}\n      toggle={props.toggle}\n      className={props.className}\n    >\n      <ModalHeader toggle={props.toggle}>Create a New Group</ModalHeader>\n      <ModalBody>\n        <InputGroup>\n          <Input\n            placeholder=\"Enter New Group Name\"\n            value={props.value}\n            onChange={props.groupNameHandler}\n          />\n        </InputGroup>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" onClick={props.addGroup}>\n          Create Group\n        </Button>\n        <Button color=\"cancelBtn\" onClick={props.toggle}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  </div>\n);\n\nexport default CreateGroupModal;\n","import React from \"react\";\nimport CreateGroupModal from \"../modals/CreateGroupModal\";\n\nclass GroupHeader extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"px-2 d-flex justify-content-between align-items-center\">\n          <h6 className=\"text-muted\">Groups</h6>\n          <button onClick={this.props.toggleModal} className=\"addBtn\">\n            <i className=\"material-icons\" style={{ fontSize: \"20px\", color: \"grey\" }}> add_circle_outline </i>\n          </button>\n        </div>\n        <CreateGroupModal toggle={this.props.toggleModal} {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default GroupHeader;\n","import React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  InputGroup\n} from \"reactstrap\";\n\nclass InviteUserModal extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <Modal\n          isOpen={this.props.modalStatus}\n          toggle={this.props.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.props.toggle}>Invite a New User</ModalHeader>\n          <ModalBody>\n            <InputGroup>\n              <Input placeholder=\"Enter their email address\" value={this.props.userEmail} onChange={this.props.emailChange}/>\n            </InputGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.props.addMember}>\n                Invite User\n            </Button>\n            <Button color=\"cancelBtn\" onClick={this.props.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default InviteUserModal;\n","import React from \"react\";\nimport InviteUserModal from \"../modals/InviteUserModal\";\n\nfunction MemberHeader(props) {\n  return (\n    <div>\n      <div className=\"px-2 d-flex justify-content-between align-items-center\">\n        <h6 className=\"text-muted\">Members</h6>\n        <button onClick={props.toggleModal} className=\"addBtn\">\n          <i className=\"material-icons\" style={{ fontSize: \"20px\", color: \"grey\" }}>\n            add_circle_outline\n          </i>\n        </button>\n      </div>\n      <InviteUserModal toggle={props.toggleModal} {...props} />\n    </div>\n  );\n}\n\nexport default MemberHeader;\n","import React from 'react';\n\nconst CustomerHeader = props => {\n    return (\n      <div className=\"px-2 d-flex justify-content-between align-items-center\">\n        <h6 className=\"text-muted\">Customers</h6>\n        <button onClick={props.addGroup} className='addBtn'>\n          <i className='material-icons' style={{ fontSize: '20px', color: 'grey' }}>\n            add_circle_outline\n          </i>\n        </button>\n      </div>\n    );\n  };\n\nexport default CustomerHeader;","import React from \"react\";\nimport {Form, Input, FormGroup, Button} from \"reactstrap\";\n\nconst MessageBar = props => (\n  <Form className=\"sendMessage\" inline={true}>\n    <FormGroup> \n      <Input className=\"sendInput\" onChange={props.changeHandler} value={props.value} type=\"text\"/>\n      <Button color=\"secondary\" className=\"sendBtn\" onClick={props.clickHandler} type=\"submit\">Send</Button>\n    </FormGroup>\n  </Form>\n);\n\nexport default MessageBar;\n","import React from \"react\";\nimport { PromiseProvider } from \"mongoose\";\n\n// \n// NOTE: this message component is designed to work for both\n// Team messages AND Customer/incoming messages...hence the nested ternary \n\nconst Message = props => (\n  props.convoType === \"incoming\" ? ( // if customer conversation....\n    props.id ?\n  // right side\n    <div className=\"row justify-content-end bounce-in-left\">\n      <div className=\"card messageBubble myMessage text-white\">\n        <div className=\"card-body\">\n          <p className=\"card-text message-text\">{props.body}</p>\n          <h5 className=\"card-title message-sender senderName\">{props.name}</h5>\n        </div>\n      </div>\n    </div>\n    :\n    // left side  \n    <div className=\"card messageBubble theirMessage bounce-in-right\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title message-sender\">{props.name}</h5>\n        <p className=\"card-text message-text\">{props.body}</p>\n      </div>\n    </div>\n  ) : ( // if not customer conversation\n    props.id === props.activeUser._id ?\n    // right side\n      <div className=\"row justify-content-end bounce-in-left\">\n        <div className=\"card messageBubble myMessage text-white\">\n          <div className=\"card-body\">\n            <p className=\"card-text message-text\">{props.body}</p>\n            <h5 className=\"card-title message-sender senderName\">{props.name}</h5>\n          </div>\n        </div>\n      </div>\n      :\n      // left side  \n      <div className=\"card messageBubble theirMessage bounce-in-right\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title message-sender\">{props.name}</h5>\n          <p className=\"card-text message-text\">{props.body}</p>\n        </div>\n      </div>\n  )\n  \n);\n\n\nexport default Message;\n","import React from \"react\";\nimport Message from './Message';\n\nclass MessageBoard extends React.Component{\n\n  componentDidMount(){\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate(prevProps){\n    if(this.props.messages.length !== prevProps.messages.length){\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  render () {\n    return (\n      <div className=\"conversation-body\">\n          {this.props.messages &&\n            this.props.messages.map(message => <Message key={message._id} name={message.senderName} body={message.body} activeUser={this.props.activeUser} id={message.senderId}/>)}\n            <div style={{ float:\"left\", clear: \"both\" }}\n             ref={(el) => { this.messagesEnd = el; }}>\n            </div>\n      </div>\n    )\n  }\n}\n\n\nexport default MessageBoard;\n","import React from \"react\";\nimport MessageBar from './MessageBar';\nimport MessageBoard from './MessageBoard';\nimport { fc } from \"../../feathersClient\";\n\nclass MessagePage extends React.Component {\n  state = {\n    messageInput: \"\",\n  };\n\n  changeHandler = event => {\n    this.setState({ messageInput: event.target.value });\n  };\n\n  clickHandler = event => {\n    event.preventDefault();\n    console.log('this should be only once. in MessagePage')\n    fc.service(\"messages\")\n      .create({\n        body: this.state.messageInput,\n        senderId: this.props.activeUser._id,\n        senderName: this.props.activeUser.name,\n        conversationId: this.props.conversationId\n      })\n      .then((data) => {\n        console.log('message created', data)\n        this.setState({ messageInput: \"\" });\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MessageBoard convoType={this.props.convoType} messages={this.props.messages} activeUser={this.props.activeUser} />\n        <div className=\"px-4 border-top d-flex pb-4 bg-light conversation-view-footer fixed-bottom\">\n          <MessageBar\n            changeHandler={this.changeHandler}\n            clickHandler={this.clickHandler}\n            value={this.state.messageInput}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MessagePage;\n","import React from 'react';\nimport MessagePage from './MessagePage';\nimport { fc } from '../../feathersClient';\nimport { Nav, Jumbotron } from \"reactstrap\";\nimport { userInfo } from 'os';\n\nclass ConversationView extends React.Component {\n\n  render() {\n    // want convo.type, convo.name, convo.id, updateMessages\n    const { conversation } = this.props;\n\n    return conversation ?\n      (<div className=\"col-8 pl-0 pr-0\" id='conversation-view'>\n      <Nav className=\"navbar bg-light d-flex justify-content-center sticky-top\">\n        <span className=\"navbar-brand\" href=\"#\">{ conversation.type === \"member\" ? (conversation.name.replace(this.props.activeUser.name, \"\").trim() ) : (conversation.name)}</span>\n      </Nav>\n        <MessagePage convoType={conversation.type} {...this.props}/>\n      </div>)\n      :\n      (<div className=\"col-8 pl-0 pr-0\" id='conversation-view'>\n      <Nav className=\"navbar bg-light d-flex justify-content-center sticky-top\">\n        <span className=\"navbar-brand\" href=\"#\">{\"Welcome, \" + this.props.activeUser.name}</span>\n      </Nav>\n      <MessagePage {...this.props}/>\n      </div>);\n  }\n}\n\nexport default ConversationView;\n","import React from 'react';\n\n\n// props.status[props.activeUserId]  {props.status[props.activeUserId] + \nconst TeamListItem = props => {\n  const status = props.status[props.activeUserId];\n  return (\n    props.activeConvoId === props._id\n    ? <div className=\"border teamListItem activeConvo fade-in\" id={props._id} onClick={props.openConversation}>\n      <i className={'material-icons notifyDot '+ status} style={{ fontSize: '20px' }}>\n        fiber_manual_record\n      </i>\n      <h5 className='listName'>{props.name}</h5>\n      <div className='previewText text-muted'>{props.preview}</div>\n      <div className='elapsedTime'>{props.timestamps}</div>\n    </div> : \n    <div className=\"border teamListItem slide-in-bck-center\" id={props._id} onClick={props.openConversation}>\n      <i className={'material-icons notifyDot ' + status} style={{ fontSize: '20px' }}>\n        fiber_manual_record\n      </i>\n      <h5 className='listName'>{props.name}</h5>\n      <div className='previewText text-muted'>{props.preview}</div>\n      <div className='elapsedTime'>{props.timestamps}</div>\n    </div>\n  );\n  \n};\n\nexport default TeamListItem;\n","import React from 'react';\nimport { fc } from '../../feathersClient';\nimport TeamHeader from '../headers/TeamHeader';\nimport GroupHeader from '../headers/GroupHeader';\nimport MemberHeader from '../headers/MemberHeader';\nimport CustomerHeader from \"../headers/CustomerHeader\";\nimport ConversationView from '../conversations/ConversationView';\nimport TeamListItem from '../TeamListItem';\n\n// this.props =  activeTeamId, activeUser,  teamCreate, teamNameInput, teamName, {...props}\nclass TeamPage extends React.Component {\n  state = {\n    messages: [],\n    teamMembers: [],\n    teamName: '',\n    groupConvos: [],\n    memberConvos: [],\n    customerConvos: [],\n    messageView: false,\n    activeConversation: null,\n    activeConvoId: '',\n    groupName: \"\",\n    groupModal: false,\n    userEmail: \"\",\n    userModal: false,\n  };\n\n  // When a conversation is opened change unread to unreplied. \n  unreadToUnreplied = async () => {\n    const teamId = this.props.activeTeamId;\n    const userId = this.props.activeUser._id;\n    // update db \n    let statusPath = `status.${userId}`;\n    console.log('status path check should be status.sdlfawoiecwpo', statusPath)\n    console.log('activeConvo status',this.state.activeConversation.status)\n    if (this.state.activeConversation.status[userId] === \"unread\") {\n      const updatedConvo = await fc.service('conversations').patch(this.state.activeConvoId, { [statusPath] : \"unreplied\"})\n      // update state with new convos from db \n      console.log('updatedconvo status', updatedConvo.status)\n      const type = updatedConvo.type;\n      if (type===\"member\") {const memberConvos = await this.getMemberConvos(teamId, this.props.activeUser); await this.setState({memberConvos})}\n      else if (type===\"group\") {const groupConvos = await this.getGroupConvos(teamId, this.props.activeUser); console.log('group conversations', groupConvos); await this.setState({groupConvos})}\n      else if (type===\"incoming\") {const customerConvos = await this.getCustomerConvos(teamId, this.props.activeUser); await this.setState({customerConvos})}\n    }\n  } // done\n  getMemberConvos = async (teamId, user) => { \n    let memberConvos = await fc.service('conversations').find({query: {teamId: teamId, userIds: user._id, type: \"member\"}});\n    if (memberConvos.data.length > 0) {memberConvos = await this.removeMyNameFromDisplayedMemberConvoName(memberConvos.data, user);} else {memberConvos = memberConvos.data}\n    console.log('member convos why name not removed? ', memberConvos)\n    return memberConvos;\n  } // done\n  getGroupConvos = async (teamId, user) => { \n    const groupConvos = await fc.service('conversations').find({query: {teamId: teamId, userIds: user._id, type: \"group\"}});\n    return groupConvos.data;\n  } // done\n  getCustomerConvos = async (teamId, user) => {\n    const customerConvos = await fc.service('conversations').find({query: {teamId: teamId, userIds: user._id, type: \"incoming\"}});\n    return customerConvos.data;\n  } // done\n  getTeamMembers = async (teamId) => {\n    const teamMembers = await fc.service('users').find({query: {teamIds: teamId}});\n    return teamMembers.data;\n  } // done\n  getTeamName = async (teamId) => {\n    const team = await fc.service('teams').get(teamId);\n    return team.name;\n  } // done\n  removeMyNameFromDisplayedMemberConvoName = (memberConvos,user) => {\n    for (let i=1; i<memberConvos.length; i++) {\n      console.log('i should see convo name and my name', memberConvos[i].name, user.name)\n      memberConvos[i].name = memberConvos[i].name.replace(user.name, \"\").trim()\n    }\n    return memberConvos\n  } // done\n  createNewPersonalConversation_OnJoinTeam = async (teamId, user) => {\n    const myConvo = await fc.service('conversations').create({teamId: teamId, type: \"member\", name: user.name + \" (you)\", userIds: user._id, status: {[user._id]: \"replied\"}});\n  } // done\n  createNewMember2MemberConversations_OnJoinTeam = async (teamMembers, teamId, user) => {\n    for (let i = 0; i < teamMembers.length; i++) {\n      if (user._id !== teamMembers[i]._id) {\n        const convo = await fc.service('conversations').create({\n          name: user.name + ' ' + teamMembers[i].name,\n          userIds: [user._id, teamMembers[i]._id],\n          type: 'member',\n          teamId: teamId,\n          status: {[user._id]: \"replied\"}\n        });\n      }\n    }\n  } // done\n  addNewMemberToAllGroupConversations_OnJoinTeam = async (teamId, user) => {\n    return await fc.service('conversations').patch(null, {$push: {userIds: user._id}}, {query: {teamId: teamId, type: \"group\"}});\n  } // done\n  initializeGroupConvoStatus_IfNeeded = async (groupConvos, user) => {\n    for (let i = 0; i<groupConvos.length; i++) {\n      if (!groupConvos[i].status) {\n        groupConvos[i].status = {};\n      }\n      if (!groupConvos[i].status[user._id]) {\n        groupConvos[i].status[user._id] = \"replied\"\n        const groupConvo = await fc.service('conversations').patch(groupConvos[i]._id, {status: {[user._id]: \"replied\" }})\n      }\n    }\n    return groupConvos;\n  } // done\n  intializeMemberConvoStatus_IfNeeded = async (memberConvos, user) => {\n    for (let i = 0; i<memberConvos.length; i++) {\n      if (!memberConvos[i].status) {\n        memberConvos[i].status = {};\n      }\n      if (!memberConvos[i].status[user._id]) {\n        memberConvos[i].status[user._id] = \"replied\"\n        await fc.service('conversations').patch(memberConvos[i]._id, {status: {[user._id]: \"replied\" }})\n      }\n    }\n    return memberConvos;\n  } // done\n  initializeCustomerConvoStatus_IfNeeded = async (customerConvos, user) => {\n    for (let i = 0; i<customerConvos.length; i++) {\n      if (!customerConvos[i].status) {\n        customerConvos[i].status = {};\n      }\n      if (!customerConvos[i].status[user._id]) {\n        customerConvos[i].status[user._id] = \"replied\"\n        await fc.service('conversations').patch(customerConvos[i]._id, {status: {[user._id]: \"replied\" }})\n      }\n    }\n    return customerConvos\n  } // done\n\n\n  getData = async (teamId, user) => {\n    const teamName = await this.getTeamName(teamId);\n    let teamMembers = await this.getTeamMembers(teamId);\n    let groupConvos = await this.getGroupConvos(teamId, user);\n    let memberConvos = await this.getMemberConvos(teamId, user);\n    let customerConvos = await this.getCustomerConvos(teamId, user);\n\n    // upon first login to a team: create the member to member threads between the new member and all other members\n    if (memberConvos.length === 0) {\n      await this.createNewPersonalConversation_OnJoinTeam(teamId, user);\n      await this.createNewMember2MemberConversations_OnJoinTeam(teamMembers, teamId, user);\n      memberConvos = await this.getMemberConvos(teamId, user._id);\n    }\n    if (groupConvos.length === 0) {\n      groupConvos = await this.addNewMemberToAllGroupConversations_OnJoinTeam(teamId, user);\n    }\n\n    // if the status doesn't exist yet set the default status for activeUser on the convo to replied\n    groupConvos = await this.initializeGroupConvoStatus_IfNeeded(groupConvos, user);\n    memberConvos = await this.intializeMemberConvoStatus_IfNeeded(memberConvos, user);\n    customerConvos = await this.initializeCustomerConvoStatus_IfNeeded(customerConvos, user);\n\n    this.setState({\n      teamMembers: teamMembers,\n      teamName: teamName,\n      groupConvos: groupConvos,\n      memberConvos: memberConvos,\n      customerConvos: customerConvos.data || []\n    });\n  } // done\n  updateStateForNewMessage = async (message) => {\n    // pull convos for this message type and update state\n    const convo = await fc.service('conversations').get(message.conversationId);\n    console.log('we are listening to new messages and we heard that one, message, convo.type', message, convo.type)\n    const convoType = convo.type;\n    if (convoType === \"member\") { const updatedMemberConvos = await this.getMemberConvos(this.props.activeTeamId, this.props.activeUser); this.setState({memberConvos: updatedMemberConvos})}\n    else if (convoType === \"group\") { const updatedGroupConvos = await this.getGroupConvos(this.props.activeTeamId, this.props.activeUser); this.setState({groupConvos: updatedGroupConvos})}\n    else if ( convoType === \"incoming\") {const updatedCustomerConvos = await this.getCustomerConvos(this.props.activeTeamId, this.props.activeUser); this.setState({customerConvos: updatedCustomerConvos})}\n    // if convo is current convo then get messages and update state\n    if (this.state.activeConvoId === message.conversationId) {\n      // this.setState({messages: [...this.state.messages, message]})\n      this.updateMessagesForActiveConversation();\n    }\n  } // done\n  updateStateForNewConvo = async convo => {\n    const convoType = convo.type;\n    if (convoType === \"member\") { const updatedMemberConvos = await this.getMemberConvos(this.props.activeTeamId, this.props.activeUser); this.setState({memberConvos: updatedMemberConvos})}\n    else if (convoType === \"group\") { const updatedGroupConvos = await this.getGroupConvos(this.props.activeTeamId, this.props.activeUser); this.setState({groupConvos: updatedGroupConvos})}\n    else if ( convoType === \"incoming\") { const updatedCustomerConvos = await this.getCustomerConvos(this.props.activeTeamId, this.props.activeUser); this.setState({customerConvos: updatedCustomerConvos})}\n  } // done\n\n  updateMessagesForActiveConversation = async () => {\n    const messages = await fc.service(\"messages\").find({ query: { conversationId: this.state.activeConvoId } })\n    await this.setState({ messages: messages.data });\n  }; // done\n  \n\n  componentDidMount() {\n    this.getData(this.props.activeTeamId, this.props.activeUser);\n\n    // Listen to created conversation and add the new convo in real-time\n    fc.service('conversations').on('created', this.updateStateForNewConvo);\n    // listen for new messages, then run updateStateForNewMessages\n    fc.service('messages').on('created', this.updateStateForNewMessage);\n  } // done\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps.activeUser !== this.props.activeUser ||\n      prevProps.activeTeamId !== this.props.activeTeamId ||\n      prevState.teamMembers.length !== this.state.teamMembers.length\n    ) {\n      this.getData(this.props.activeTeamId, this.props.activeUser);\n    }\n    // if activeConvoId changes then run get messages to update state\n    if (this.state.activeConvoId !== prevState.activeConvoId) {\n      // get the messages for the now active conversation\n      this.updateMessagesForActiveConversation();\n      // change the status of this active conversation to unreplied if unread\n      this.unreadToUnreplied();\n    }\n  }\n\n  groupNameChange = (event) => {\n    this.setState({ groupName: event.target.value });\n  }\n\n  addGroup = async (e) => {\n    e.preventDefault();\n    const userIds = this.state.teamMembers.map(member => member._id);\n    console.log('userIds on new group', userIds)\n    await fc.service('conversations').create({\n        name: this.state.groupName,\n        type: 'group',\n        teamId: this.props.activeTeamId,\n        status: {[this.props.activeUser._id]: \"replied\" },\n        userIds: userIds\n      });\n    // const updatedGroupConversations = await this.getGroupConvos(this.props.activeTeamId, this.props.activeUser);\n\n    this.setState({\n      // groupConvos: updatedGroupConversations,\n      groupModal: false,\n      groupName: \"\"\n    })\n  }\n\n  toggleGroupModal = (event) => {\n    event.preventDefault();\n    this.setState({ groupModal: !this.state.groupModal });\n  }\n  // on addMember() click, prompt for invitee email address, and add the email to invitedEmails array on team (to be checked later on registration)\n  addMember = e => {\n    e.preventDefault();\n    // console.log(\"add member button clicked\")\n    fc.service(\"users\").find({query: {email: this.state.userEmail}})\n      .then(user => {\n        if(user.data[0] && user.data[0].email === this.state.userEmail){\n          console.log(\"user was found\");\n          fc.service(\"users\").patch(user.data[0]._id, {$push: {teamIds: this.props.activeTeamId}})\n            .then(user => {\n              this.getData(this.props.activeTeamId, this.props.activeUser);\n            });\n        } else {\n          console.log(\"user was not found\");\n          fc.service('teams').patch(this.props.activeTeamId, { $push: { invitedEmails: this.state.userEmail } });\n        }\n      });\n    this.setState({userModal: false});\n  };\n\n  emailChange = (event) => {\n    this.setState({ userEmail: event.target.value });\n  }\n\n  toggleEmail = (event) => {\n    event.preventDefault();\n    this.setState({ userModal: !this.state.userModal });\n  }\n\n  // when a conversation is clicked, open it up in ConversationPage ?\n  openConversation = async e => {\n    e.preventDefault();\n    const convoId = e.currentTarget.id;\n    const convo = await fc.service('conversations').get(convoId)\n    this.setState({ activeConvoId: convoId, activeConversation: convo });\n  }\n\n\n  render() {\n    return (\n      <div className=\"row\" id=\"team-page\">\n        <div className=\"col-4 flex-column justify-content-center border-right convoView\">\n        <TeamHeader teamName={this.state.teamName} activeUser={this.props.activeUser} teamChange={this.props.teamChange}/>\n            <div>\n            <GroupHeader addGroup={this.addGroup} value={this.state.groupName} modalStatus={this.state.groupModal} groupNameHandler={this.groupNameChange} toggleModal={this.toggleGroupModal} {...this.props} />\n            {this.state.groupConvos.length > 0 ? (\n                this.state.groupConvos.map(convo => <TeamListItem key={convo._id} activeConvoId={this.state.activeConvoId} activeUserId={this.props.activeUser._id} openConversation={this.openConversation} {...convo} />\n                )\n              ) : ( <h6 className='listItem'>{null}</h6>)\n            }\n            <MemberHeader addMember={this.addMember} modalStatus={this.state.userModal} emailChange={this.emailChange} value={this.state.userEmail} {...this.props} toggleModal={this.toggleEmail} />\n            {this.state.memberConvos.length > 0 ? (\n              this.state.memberConvos.map(convo => (\n                <TeamListItem key={convo._id} activeConvoId={this.state.activeConvoId} activeUserId={this.props.activeUser._id} openConversation={this.openConversation} {...convo} />\n              ))\n            ) : (\n              <h3 className='listItem'>{null}</h3>\n            )}\n          <CustomerHeader addSMS={this.addSMS} {...this.props} />\n          {this.state.customerConvos.length > 0 ? (\n            this.state.customerConvos.map(convo => <TeamListItem key={convo._id} activeConvoId={this.state.activeConvoId}  activeUserId={this.props.activeUser._id} openConversation={this.openConversation} status={convo.status} {...convo} />\n            )\n          ) : (<h6 className=\"listItem\">{null}</h6>)\n          }\n            </div>\n        </div>\n        <ConversationView getMessages={this.updateMessagesForActiveConversation} messages={this.state.messages} activeUser={this.props.activeUser} conversationId={this.state.activeConvoId} conversation={this.state.activeConversation} />\n      </div>\n    );\n  }\n}\n\nexport default TeamPage;\n","import React from 'react';\nimport CreateTeam from './CreateTeam'\nimport TeamPage from './TeamPage'\n\nfunction Home(props) {\n  return (\n    <div>\n      {props.activeTeamId ?\n        <TeamPage {...props}/> :\n        <CreateTeam teamCreate={props.teamCreate} teamNameInput={props.teamNameInput}/>}\n    </div>\n  )\n\n}\n\nexport default Home;\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction ProtectedRoute({ component: Component, token, activeTeamId, activeUser, teamNameInput, teamCreate, teamChange, teamName, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        token ? (\n          <Component activeTeamId={activeTeamId} activeUser={activeUser} teamCreate={teamCreate} teamNameInput={teamNameInput} teamChange={teamChange} teamName={teamName} {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/register\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Index from './components/pages/Index';\nimport Login from './components/pages/Login';\nimport Register from './components/pages/Register';\nimport Home from './components/pages/Home';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { fc } from './feathersClient';\n\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    token: false,\n    activeUser: {},\n    activeTeamId: '',\n    teamInput: '',\n  };\n\n  componentDidMount() {\n    /**\n     * Check localStorage for a jwt token and attempt to authenticate the\n     * token. If the token fails to pass authentication, then don't\n     * do anything (fail silently).\n     */\n    fc.authenticate().catch(() => {});\n    // On successful login\n    fc.on('authenticated', response => {\n      const setUser = async token => {\n        const payload = await fc.passport.verifyJWT(token);\n        let user = await fc.service('users').get(payload.userId);\n        const invitation = await fc.service('teams').find({ query: { invitedEmails: user.email } }); // only works for 1 invitation at a time right now\n        if (invitation.data.length === 1) {\n          const invitingTeamId = invitation.data[0]._id;\n          user = await fc.service('users').patch(user, {$push: { teamIds: invitingTeamId}});\n          user = await fc.service('users').patch(user, {activeTeamId: invitingTeamId} );\n          const deleteEmailInvite = await fc.service('teams').patch(invitingTeamId, {$pull: {invitedEmails: user.email}});\n        } else if (invitation.data.length > 1) {console.log('more than one invitation, check App.js to add this functionality')}\n\n\n        this.setState({\n          token: token,\n          activeUser: user,\n          activeTeamId: user.activeTeamId,\n        });\n      };\n      setUser(response.accessToken);\n    });\n\n    // Listen for when the user logs out\n    fc.on('logout', response => {\n      this.setState({\n        token: null,\n      });\n    });\n  }\n\n  teamChange = event => {\n    event.preventDefault();\n    fc.service('users').patch(this.state.activeUser, { activeTeamId: event.target.value });\n    this.setState({ activeTeamId: event.target.value });\n  };\n\n  teamNameInput = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      error: null,\n    });\n  };\n\n  teamCreate = e => {\n    fc.service('teams').create({\n        name: this.state.teamInput,\n      })\n      .then(data => {\n        this.setState({ activeTeamId: data._id });\n      });\n  };\n\n  render() {\n    return (\n      <Router>\n        <Route path='/' exact component={Index} />\n        <Route\n          path='/login'\n          exact\n          render={props => <Login token={this.state.token} {...props} />}\n        />\n        <Route\n          path='/register'\n          exact\n          render={props => <Register token={this.state.token} {...props} />}\n        />\n        <ProtectedRoute\n          path='/home'\n          exact\n          token={this.state.token}\n          activeTeamId={this.state.activeTeamId}\n          activeUser={this.state.activeUser}\n          teamNameInput={this.teamNameInput}\n          teamCreate={this.teamCreate}\n          teamName={this.state.teamInput}\n          teamChange={this.teamChange}\n          component={Home}\n        />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n// import 'bootstrap-css-only/css/bootstrap.min.css';\n// import 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const feathers = require('@feathersjs/feathers');\nconst socketio = require('@feathersjs/socketio-client');\nconst io = require('socket.io-client');\nconst auth = require('@feathersjs/authentication-client');\n\nconst socketURI = process.env.NODE_ENV !== \"production\" ? \"http://localhost:3030/\" : \"https://frontdor.herokuapp.com\";\n\nconst socket = io(socketURI);\nconst feathersClient = feathers();\n\n// Set up Socket.io client with the socket\nfeathersClient.configure(socketio(socket));\n\nfeathersClient.configure(auth({\n  storage: window.localStorage\n}))\n\nmodule.exports = {\n  fc: feathersClient\n}\n"],"sourceRoot":""}